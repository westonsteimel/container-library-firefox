on: 
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: '0 1 * * MON-FRI'
name: Build and publish to DockerHub
env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
  QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
jobs:
  update:
    name: update
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@main
      - 
        name: Update Dockerfiles
        run: |
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git config user.name "github-actions[bot]"
            ./scripts/update.sh
            git push
  stable:
    needs: update
    name: stable
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@main
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Build and Publish stable docker images
        run: |
            export DOCKER_BUILD_CONTEXT="stable"
            export DOCKER_IMAGE_VERSION=`sed -ne "s/^ARG VERSION=['\"]\([^'\"]*\)['\"]/\1/p" stable/Dockerfile`
            export DOCKER_TAGS="stable,latest,${DOCKER_IMAGE_VERSION}"
            ./scripts/publish.sh

  beta:
    needs: update
    name: beta
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@main
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and Publish beta docker images
        run: |
            export DOCKER_BUILD_CONTEXT="beta"
            export DOCKER_IMAGE_VERSION=`sed -ne "s/^ARG VERSION=['\"]\([^'\"]*\)['\"]/\1/p" beta/Dockerfile`
            export DOCKER_TAGS="beta,${DOCKER_IMAGE_VERSION}"
            ./scripts/publish.sh

  nightly:
    needs: update
    name: nightly
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@main
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      -
        name: Build and Publish nightly docker images
        run: |
            export DOCKER_BUILD_CONTEXT="nightly"
            export DOCKER_IMAGE_VERSION=`sed -ne "s/^ARG VERSION=['\"]\([^'\"]*\)['\"]/\1/p" nightly/Dockerfile`
            export DOCKER_TAGS="edge,nightly,${DOCKER_IMAGE_VERSION}"
            ./scripts/publish.sh

  alpine:
    name: alpine
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@main
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and Publish alpine
        run: |
            export DOCKER_BUILD_CONTEXT="alpine"
            export DOCKER_IMAGE_VERSION="alpine"
            export DOCKER_TAGS="alpine"
            ./scripts/publish.sh


